/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.avaliacaocontinuada1;

import java.util.Random;

/**
 *
 * @author adais
 */
public class ControleDeSistemaOperacional extends javax.swing.JFrame {

    /**
     * Creates new form ControleDeSistemaOperacional
     */
    public ControleDeSistemaOperacional() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblSubTitulo = new javax.swing.JLabel();
        bprCPU = new javax.swing.JProgressBar();
        bprMemoria = new javax.swing.JProgressBar();
        bprDisco = new javax.swing.JProgressBar();
        lblCPU = new javax.swing.JLabel();
        lblMemoria = new javax.swing.JLabel();
        lblDisco = new javax.swing.JLabel();
        lblPorcentagemCpu = new javax.swing.JLabel();
        lblPorcentagemMem = new javax.swing.JLabel();
        lblPorcentagemDis = new javax.swing.JLabel();
        lblMin = new javax.swing.JLabel();
        lblMax = new javax.swing.JLabel();
        lblMed = new javax.swing.JLabel();
        lblMaxCpu = new javax.swing.JLabel();
        lblMedCpu = new javax.swing.JLabel();
        lblMaxMemoria = new javax.swing.JLabel();
        lblMinMemoria = new javax.swing.JLabel();
        lblMedMemoria = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        lblMedDisco = new javax.swing.JLabel();
        bntNovaLeitura = new javax.swing.JButton();
        lblMinCpu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitulo.setText("Gerenciador de Tarefas");

        lblSubTitulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSubTitulo.setText("Desempenho");

        lblCPU.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblCPU.setText("CPU");

        lblMemoria.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblMemoria.setText("Memória");

        lblDisco.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblDisco.setText("Disco");

        lblPorcentagemCpu.setText("0%");

        lblPorcentagemMem.setText("0%");

        lblPorcentagemDis.setText("0%");

        lblMin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMin.setText("Minimo");

        lblMax.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMax.setText("Máximo");

        lblMed.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMed.setText("Média");

        lblMaxCpu.setText("0");

        lblMedCpu.setText("0");

        lblMaxMemoria.setText("0");

        lblMinMemoria.setText("0");

        lblMedMemoria.setText("0");

        lblMaxDisco.setText("0");

        lblMinDisco.setText("0");

        lblMedDisco.setText("0");

        bntNovaLeitura.setText("Nova Leitura");
        bntNovaLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNovaLeituraActionPerformed(evt);
            }
        });

        lblMinCpu.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMax)
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblMaxMemoria))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bprDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMemoria)
                                    .addComponent(lblDisco)
                                    .addComponent(lblCPU)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bprCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblPorcentagemCpu))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bprMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblPorcentagemDis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblPorcentagemMem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMaxCpu, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMaxDisco, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(76, 76, 76)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMin)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMinMemoria)
                            .addComponent(lblMinCpu)
                            .addComponent(lblMinDisco))))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMed)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMedMemoria)
                            .addComponent(lblMedCpu)
                            .addComponent(lblMedDisco))))
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(lblTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(lblSubTitulo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bntNovaLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSubTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMin)
                    .addComponent(lblMed)
                    .addComponent(lblMax))
                .addGap(8, 8, 8)
                .addComponent(lblCPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblMaxCpu)
                                .addComponent(lblMedCpu)
                                .addComponent(lblMinCpu))
                            .addGap(62, 62, 62)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblMaxMemoria)
                                .addComponent(lblMinMemoria)
                                .addComponent(lblMedMemoria))
                            .addGap(62, 62, 62))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblPorcentagemCpu)
                            .addGap(63, 63, 63)
                            .addComponent(lblPorcentagemMem)
                            .addGap(49, 49, 49)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bprCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(lblMemoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bprMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(lblDisco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bprDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMaxDisco)
                        .addComponent(lblMinDisco)
                        .addComponent(lblMedDisco)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPorcentagemDis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(bntNovaLeitura)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
         Integer contador = 0;
         Integer valorGuardaCPU = 0;
         Integer maxCPU = 0;
         Integer minCPU = 100;
         Integer valorGuardaMem = 0;
         Integer maxMEM = 0;
         Integer minMEM = 100;
         Integer valorGuardaDis = 0;
         Integer maxDIS = 0;
         Integer minDIS = 100;
         
         
         
    private void bntNovaLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNovaLeituraActionPerformed
        Random aleatorioCPU = new Random();
        Random aleatorioMem = new Random();
        Random aleatorioDis = new Random();
        
        
        contador++;
       
       Integer numCPU = aleatorioCPU.nextInt(80)+ 1;
       Integer numMEM = aleatorioMem.nextInt(80) + 1;
       Integer numDIS = aleatorioDis.nextInt(85) + 1;
       
       //Integer maxCPU = Integer.valueOf(lblMaxCpu.getText());
       //Integer maxMEM = Integer.valueOf(lblMaxMemoria.getText());
       //Integer maxDIS = Integer.valueOf(lblMaxDisco.getText());
       
      
       //Integer minCPU = Integer.valueOf(lblMinCpu.getText());
       //Integer minMEM = Integer.valueOf(lblMinMemoria.getText());
       //Integer minDIS = Integer.valueOf(lblMinDisco.getText());
       
       //Integer medCPU = Integer.valueOf(lblPorcentagemCpu.getText());
       //Integer medMEM = Integer.valueOf(lblMaxCpu.getText());
       //Integer medDIS = Integer.valueOf(lblMaxCpu.getText());
       
       Integer processoMediaCpu = valorGuardaCPU + numCPU;
       valorGuardaCPU = processoMediaCpu;
       Integer mediaCPU = valorGuardaCPU / contador;
       lblMedCpu.setText(String.format("%d", mediaCPU));
       
       Integer processoMediaMem = numMEM + valorGuardaMem;
       valorGuardaMem = processoMediaMem;
       Integer mediaMEM = valorGuardaMem / contador;
       lblMedMemoria.setText(String.format("%d", mediaMEM));
       
       Integer processoMediaDis = numDIS + valorGuardaDis;
       valorGuardaDis = processoMediaDis;
       Integer mediaDIS = valorGuardaDis / contador;
       lblMedDisco.setText(String.format("%d", mediaDIS));
       
       if(numCPU > maxCPU){
           maxCPU = numCPU;
            lblMaxCpu.setText(String.format("%d", numCPU)); 
             //System.out.println(sorteCPU);
      }else if(numCPU < minCPU){
          minCPU = numCPU;
          lblMinCpu.setText(String.format("%d", numCPU));
           //System.out.println(sorteCPU);
       }
      
      if(numMEM > maxMEM){
          maxMEM = numMEM;
             lblMaxMemoria.setText(String.format("%d", numMEM)); 
         
       }else if(numMEM < minMEM){
           minMEM = numMEM;
          lblMinMemoria.setText(String.format("%d", numMEM));
         
       }
      
      if(numDIS > maxDIS){
          maxDIS = numDIS;
             lblMaxDisco.setText(String.format("%d", numDIS)); 
         
       }else if(numDIS < minDIS){
           minDIS = numDIS;
          lblMinDisco.setText(String.format("%d", numDIS));
           
      }
       
        
        //System.out.println(contador);
        
        lblPorcentagemCpu.setText(numCPU + "%");
        bprCPU.setValue(numCPU);
        
        lblPorcentagemMem.setText(numMEM + "%");
        bprMemoria.setValue(numMEM);
        
        lblPorcentagemDis.setText(numDIS + "%");
        bprDisco.setValue(numDIS);
        
        
        
    }//GEN-LAST:event_bntNovaLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControleDeSistemaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControleDeSistemaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControleDeSistemaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControleDeSistemaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControleDeSistemaOperacional().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntNovaLeitura;
    private javax.swing.JProgressBar bprCPU;
    private javax.swing.JProgressBar bprDisco;
    private javax.swing.JProgressBar bprMemoria;
    private javax.swing.JLabel lblCPU;
    private javax.swing.JLabel lblDisco;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblMaxCpu;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMemoria;
    private javax.swing.JLabel lblMed;
    private javax.swing.JLabel lblMedCpu;
    private javax.swing.JLabel lblMedDisco;
    private javax.swing.JLabel lblMedMemoria;
    private javax.swing.JLabel lblMemoria;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblMinCpu;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMemoria;
    private javax.swing.JLabel lblPorcentagemCpu;
    private javax.swing.JLabel lblPorcentagemDis;
    private javax.swing.JLabel lblPorcentagemMem;
    private javax.swing.JLabel lblSubTitulo;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
